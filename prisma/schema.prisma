// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  shadowDatabaseUrl    = env("SHADOW_DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

enum Status {
  ONGOING
  COMPLETED
}

model Series {
  id             String           @id @default(uuid())
  title          String
  summary        String
  cover          String
  status         Status           @default(ONGOING)
  isVisible      Boolean          @default(true)
  views          Int              @default(0)
  launched       DateTime
  createdAt      DateTime         @unique @default(now())
  updatedAt      DateTime         @unique @default(now())
  AuthorOnSeries AuthorOnSeries[]
  ArtistOnSeries ArtistOnSeries[]
  type           SeriesType       @relation(fields: [seriesTypeId], references: [id])
  seriesTypeId   String
}

model SeriesType {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @unique @default(now())
  updatedAt DateTime @unique @default(now())
  Series    Series[]
}

model Artist {
  id             String           @id @default(uuid())
  name           String
  createdAt      DateTime         @unique @default(now())
  updatedAt      DateTime         @unique @default(now())
  ArtistOnSeries ArtistOnSeries[]
}

model Author {
  id             String           @id @default(uuid())
  name           String
  createdAt      DateTime         @unique @default(now())
  updatedAt      DateTime         @unique @default(now())
  AuthorOnSeries AuthorOnSeries[]
}

model ArtistOnSeries {
  id        String   @id @default(uuid())
  artistId  String
  seriesId  String
  createdAt DateTime @unique @default(now())
  updatedAt DateTime @unique @default(now())

  Artist Artist @relation(fields: [artistId], references: [id])
  Series Series @relation(fields: [seriesId], references: [id])

  @@index([artistId, seriesId])
  @@index([seriesId, artistId])
}

model AuthorOnSeries {
  id        String   @id @default(uuid())
  authorId  String
  seriesId  String
  createdAt DateTime @unique @default(now())
  updatedAt DateTime @unique @default(now())

  author Author @relation(fields: [authorId], references: [id])
  series Series @relation(fields: [seriesId], references: [id])

  @@index([authorId, seriesId])
  @@index([seriesId, authorId])
}
